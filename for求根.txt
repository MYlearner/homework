import java.math.BigDecimal;
public class Square {
 
	public static void main(String[] args) {
		System.out.println(MathSqure(5, 10));//整数为5，小数保留10位
	}
	
	public static double MathSqure(int num, int length){//开根号
		double[] a1 = new double[length];
		if(length >0){
			a1 = b1(length);
		}
		int s = b2(num);
		
		return b3(num, s, a1);
	}
	
	//计算要保留几位小数
	public static double[] b1(int b1){
		double[] array = new double[b1];
		int no = 0;
		while(no != b1){
			double temp = 1;
			for(int i=0;i<=no;i++){
				temp = temp*10;
			}
			array[no] = 1/temp;
			no++;
		}
		return array;
	}
	
	/* 计算整数 */
	public static int b2(int a1){
		if( a1 == 1){
			return 1;
		}
		int s1 = 0;
		for(int i=1;i<=a1/2+1;i++){
			if(i*i == a1){
				s1 = i;
				break;
			}
			if(i*i > a1){
				s1 = i-1;
				break;
			}
		}
		return s1;
	}
	/* 开根号*/
	public static double b3(int n1, double t1, double[] array){
		double num = t1;
		for(int p=0;p<array.length;p++){
			if(p>0){
				t1 = num;//计算过后的值（整数位+小数位的和，下面继续运算）
			}
			for(int i=1;i<=9;i++){
				num = i*array[p]+t1;//i*array[p],相当于每次加0.1,0.2 ...
				if(num*num == n1){
					return num;
				}
				if(num*num >n1){
					//避免丢失精度
					BigDecimal c1 = new BigDecimal(Double.toString(num));
					BigDecimal c2 = new BigDecimal(Double.toString(array[p]));
					num = c1.subtract(c2).doubleValue();
					break;
				}
			}
		}
		return num;
	}
}